{
  "Commands": [
    {
      "Name": "Install-FailoverClusterPrerequisites",
      "Arguments": {}
    },
    {
      "Name": "Update-ServiceConfig",
      "Arguments": {
        "Password": "$domainAdminAccountPassword",
        "Name": "Murano Agent",
        "RunAsUser": "$domainAdminAccountName",
        "DomainName": "$domainName"
      }
    }
  ],
  "RebootOnCompletion": 1,
  "Scripts": [
    "SW1wb3J0LU1vZHVsZSBDb3JlRnVuY3Rpb25zIC1Gb3JjZQoKZnVuY3Rpb24gU2hvdy1JbnZvY2F0aW9uSW5mbyB7CiAgICBwYXJhbSAoCiAgICAgICAgJEludm9jYXRpb24sCiAgICAgICAgW1N3aXRjaF0gJEVuZAogICAgKQoKICAgIGlmICgkRW5kKSB7CiAgICAgICAgV3JpdGUtTG9nRGVidWcgIjwvZnVuY3Rpb24gbmFtZT0nJCgkSW52b2NhdGlvbi5NeUNvbW1hbmQuTmFtZSknPiIKICAgIH0KICAgIGVsc2UgewogICAgICAgIFdyaXRlLUxvZ0RlYnVnICI8ZnVuY3Rpb24gbmFtZT0nJCgkSW52b2NhdGlvbi5NeUNvbW1hbmQuTmFtZSknPiIKICAgICAgICBXcml0ZS1Mb2dEZWJ1ZyAiPHBhcmFtPiIKICAgICAgICBmb3JlYWNoICgkUGFyYW1ldGVyIGluICRJbnZvY2F0aW9uLk15Q29tbWFuZC5QYXJhbWV0ZXJzKSB7CiAgICAgICAgICAgIGZvcmVhY2ggKCRLZXkgaW4gJFBhcmFtZXRlci5LZXlzKSB7CiAgICAgICAgICAgICAgICAkVHlwZSA9ICRQYXJhbWV0ZXJbJEtleV0uUGFyYW1ldGVyVHlwZS5GdWxsTmFtZQogICAgICAgICAgICAgICAgZm9yZWFjaCAoJFZhbHVlIGluICRJbnZvY2F0aW9uLkJvdW5kUGFyYW1ldGVyc1skS2V5XSkgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLUxvZ0RlYnVnICJbJFR5cGVdICRLZXkgPSAnJFZhbHVlJyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBXcml0ZS1Mb2dEZWJ1ZyAiPC9wYXJhbT4iCiAgICB9Cn0KCjwjCiMgVXNhZ2UgZXhhbXBsZSBmb3IgU2hvdy1JbnZvY2F0aW9uSW5mbwoKZnVuY3Rpb24gTXlGdW5jdGlvbiB7CiAgICBwYXJhbSAoCiAgICAgICAgW1N0cmluZ10gJFZhbHVlMSwKICAgICAgICBbU3RyaW5nXSAkVmFsdWUyLAogICAgICAgIFtJbnRdICRJbnQxCiAgICApCiAgICBiZWdpbiB7CiAgICAgICAgU2hvdy1JbnZvY2F0aW9uSW5mbyAkTXlJbnZvY2F0aW9uCiAgICB9CiAgICBlbmQgewogICAgICAgIFNob3ctSW52b2NhdGlvbkluZm8gJE15SW52b2NhdGlvbiAtRW5kCiAgICB9CiAgICBwcm9jZXNzIHsKICAgICAgICAjIE1haW4gY29kZSBoZXJlCiAgICB9Cn0KIz4K",
    "CmZ1bmN0aW9uIFVwZGF0ZS1TZXJ2aWNlQ29uZmlnIHsKICAgIHBhcmFtICgKICAgICAgICBbU3RyaW5nXSAkTmFtZSwKICAgICAgICBbU3RyaW5nXSAkUnVuQXNVc2VyID0gJycsCiAgICAgICAgW1N0cmluZ10gJERvbWFpbk5hbWUgPSAnLicsCiAgICAgICAgW1N0cmluZ10gJFBhc3N3b3JkID0gJycsCiAgICAgICAgW1N3aXRjaF0gJFJ1bkFzTG9jYWxTZXJ2aWNlCiAgICApCgogICAgJEFyZ3VtZW50TGlzdCA9IEAoJ2NvbmZpZycsICJgIiROYW1lYCIiKQoKICAgIGlmICgkUnVuQXNMb2NhbFNlcnZpY2UpIHsKICAgICAgICAkQXJndW1lbnRMaXN0ICs9IEAoIm9iaj0iLCAiYCJOVCBBVVRIT1JJVFlcTG9jYWxTZXJ2aWNlYCIiKQogICAgfQogICAgZWxzZWlmICgkUnVuQXNVc2VyIC1uZSAnJykgewogICAgICAgICRBcmd1bWVudExpc3QgKz0gQCgib2JqPSIsICJgIiREb21haW5OYW1lXCRSdW5Bc1VzZXJgIiIsICJwYXNzd29yZD0iLCAiYCIkUGFzc3dvcmRgIiIpCiAgICB9CgogICAgJFByb2Nlc3MgPSBFeGVjICdzYy5leGUnICRBcmd1bWVudExpc3QgLVBhc3NUaHJ1IC1SZWRpcmVjdFN0cmVhbXMKCiAgICBpZiAoJFByb2Nlc3MuRXhpdENvZGUgLW5lIDApIHsKICAgICAgICB0aHJvdyAiQ29tbWFuZCAnc2MuZXhlJyByZXR1cm5lZCBleGl0IGNvZGUgJyQoJFByb2Nlc3MuRXhpdENvZGUpJyIKICAgIH0KfQo=",
    "PCMNCi5ERVNDUklQVElPTg0KDQojIyBGYWlsb3ZlciBDbHVzdGVyIElucHV0IERhdGEgKGZyb20gdGhlIFVJKQ0KDQoqIERvbWFpbiBNZW1iZXJzaGlwDQogICAgLSBbU3RyaW5nXSAvIFtTZWxlY3QgYm94XSAkRG9tYWluTmFtZSAtIERvbWFpbiBuYW1lDQoqIERvbWFpbiBVc2VyIENyZWRlbnRpYWxzDQogICAgLSBbU3RyaW5nXSAkVXNlck5hbWUgLSBVc2VybmFtZQ0KICAgIC0gW1Bhc3N3b3JkIHN0cmluZ10gJFVzZXJQYXNzd29yZCAtIFVzZXIgcGFzc3dvcmQNCiogU2hhcmVkIEZvbGRlciBJbmZvcm1hdGlvbg0KICAgIC0gW1N0cmluZ10gJFNoYXJlU2VydmVyIC0gU2VydmVyIHdoaWNoIHdpbGwgaG9zdCB0aGUgZm9sZGVyDQogICAgLSBbU3RyaW5nXSAkU2hhcmVOYW1lIC0gU2hhcmUgbmFtZQ0KICAgIC0gW1N0cmluZ10gJFNoYXJlUGF0aCAtIFNoYXJlZCBmb2xkZXIgaW50ZXJuYWwgcGF0aA0KKiBGYWlsb3ZlciBDbHVzdGVyIE1lbWJlcnMNCiAgICAtIFtTdHJpbmddICRDbHVzdGVyTmFtZSAtIENsdXN0ZXIgbmFtZQ0KICAgIC0gW1N0cmluZ10gJENsdXN0ZXJJUCAtIFN0YXRpYyBJUCBhZGRyZXNzIHRoYXQgd2lsbCBiZSBhc3NpZ25lZCB0byB0aGUgY2x1c3Rlcg0KICAgIC0gW1N0cmluZ1tdXSAkQ2x1c3Rlck5vZGVzIC0gTGlzdCBvZiBub2RlIG5hbWVzDQoNCg0KDQojIyBGYWlsb3ZlciBDbHVzdGVyIGNyZWF0aW9uIHdvcmtmbG93DQoNCiogQ3JlYXRlIEFEIGRvbWFpbg0KKiBKb2luIGFsbCB0aGUgVk1zIHRvIHRoYXQgZG9tYWluDQoqIFByZXBhcmUgbm9kZXMNCiAgICAtIEluc3RhbGwgRmFpbG92ZXIgQ2x1c3RlciBwcmVyZXF1aXNpdGVzIG9uIGFsbCBGQyBub2Rlcw0KKiBDcmVhdGUgZmFpbG92ZXIgY2x1c3Rlcg0KICAgIC0gQ3JlYXRlIG5ldyBjbHVzdGVyDQogICAgLSBBZGQgbWVtYmVycw0KKiBDb25mdWd1cmUgRkMgcXVvcnVtDQogICAgLSBDcmVhdGUgbmV3IGZvbGRlciB0aGF0IHdpbGwgYmUgc2hhcmVkDQogICAgLSBTaGFyZSB0aGF0IGZvbGRlciB3aXRoIGFwcHJvcHJpYXRlIHBlcm1pc3Npb25zDQogICAgLSBDb25maWd1cmUgcXVvcnVtIG1vZGUNCg0KDQoNCiMjIEhlbHBmdWwgU21iU2hhcmUqIEZ1bmN0aW9ucw0KDQoqIE5ldy1TbWJTaGFyZQ0KKiBHcmFudC1TbWJTaGFyZUFjY2Vzcw0KDQojPg0KDQoNCg0KZnVuY3Rpb24gSW5zdGFsbC1GYWlsb3ZlckNsdXN0ZXJQcmVyZXF1aXNpdGVzIHsNCiAgICBJbXBvcnQtTW9kdWxlIEZhaWxvdmVyQ2x1c3RlcnMNCg0KICAgIEFkZC1XaW5kb3dzRmVhdHVyZSBGYWlsb3Zlci1DbHVzdGVyaW5nLCBSU0FULUNsdXN0ZXJpbmctUG93ZXJTaGVsbA0KfQ0KDQoNCg0KZnVuY3Rpb24gTmV3LUZhaWxvdmVyQ2x1c3RlclNoYXJlZEZvbGRlciB7DQoJcGFyYW0gKA0KICAgICAgICBbU3RyaW5nXSAkQ2x1c3Rlck5hbWUsDQogICAgICAgIFtTdHJpbmddICREb21haW5OYW1lLA0KICAgICAgICBbU3RyaW5nXSAkU2hhcmVTZXJ2ZXIsDQoJCVtTdHJpbmddICRTaGFyZVBhdGggPSAkKCRFbnY6U3lzdGVtRHJpdmUgKyAnXEZDU2hhcmUnKSwNCgkJW1N0cmluZ10gJFNoYXJlTmFtZSA9ICdGQ1NoYXJlJywNCiAgICAgICAgW1N0cmluZ10gJFVzZXJOYW1lLA0KICAgICAgICBbU3RyaW5nXSAkVXNlclBhc3N3b3JkLA0KICAgICAgICAkQ3JlZGVudGlhbCA9ICRudWxsDQoJKQ0KICAgIGJlZ2luIHsNCiAgICAgICAgU2hvdy1JbnZvY2F0aW9uSW5mbyAkTXlJbnZvY2F0aW9uDQogICAgfQ0KICAgIGVuZCB7DQogICAgICAgIFNob3ctSW52b2NhdGlvbkluZm8gJE15SW52b2NhdGlvbiAtRW5kDQogICAgfQ0KICAgIHByb2Nlc3Mgew0KICAgICAgICBXcml0ZS1Mb2cgIi0tPiBOZXctRmFpbG92ZXJDbHVzdGVyU2hhcmVkRm9sZGVyIg0KDQogICAgICAgIFdyaXRlLUxvZyAiQ3JlYXRpbmcgc2hhcmVkIGZvbGRlciBmb3IgRmFpbG92ZXIgQ2x1c3RlciAuLi4iDQogICAgICAgIA0KICAgICAgICBpZiAoJENyZWRlbnRpYWwgLWVxICRudWxsKSB7DQogICAgICAgICAgICAkQ3JlZGVudGlhbCA9IE5ldy1DcmVkZW50aWFsIC1Vc2VyTmFtZSAiJERvbWFpbk5hbWVcJFVzZXJOYW1lIiAtUGFzc3dvcmQgIiRVc2VyUGFzc3dvcmQiDQogICAgICAgIH0NCg0KICAgICAgICBpZiAoKFRlc3QtQ29ubmVjdGlvbiAtQ29tcHV0ZXJOYW1lICRTaGFyZVNlcnZlciAtQ291bnQgMSAtUXVpZXQpIC1lcSAkZmFsc2UpIHsNCiAgICAgICAgICAgIHRocm93KCJTZXJ2ZXIgJyRTaGFyZVNlcnZlcicgaXMgdW5yZWFjaGFibGUgdmlhIElDTVAuIikNCiAgICAgICAgfQ0KDQogICAgICAgICRTZXNzaW9uID0gTmV3LVBTU2Vzc2lvbiAtQ29tcHV0ZXJOYW1lICRTaGFyZVNlcnZlciAtQ3JlZGVudGlhbCAkQ3JlZGVudGlhbA0KDQogICAgICAgIFdyaXRlLUxvZyAiQ3JlYXRpbmcgZm9sZGVyIG9uICckU2hhcmVTZXJ2ZXInIC4uLiINCiAgICAgICAgSW52b2tlLUNvbW1hbmQgLVNlc3Npb24gJFNlc3Npb24gLVNjcmlwdEJsb2NrIHsNCiAgICAgICAgICAgICAgICBwYXJhbSAoDQogICAgICAgICAgICAgICAgICAgIFtTdHJpbmddICRTaGFyZVBhdGgsDQogICAgICAgICAgICAgICAgICAgIFtTdHJpbmddICRTaGFyZU5hbWUsDQogICAgICAgICAgICAgICAgICAgIFtTdHJpbmddICRDbHVzdGVyQWNjb3VudA0KICAgICAgICAgICAgICAgICkNCg0KICAgICAgICAgICAgICAgIFJlbW92ZS1TbWJTaGFyZSAtTmFtZSAkU2hhcmVOYW1lIC1Gb3JjZSAtRXJyb3JBY3Rpb24gJ1NpbGVudGx5Q29udGludWUnDQogICAgICAgICAgICAgICAgUmVtb3ZlLUl0ZW0gLVBhdGggJFNoYXJlUGF0aCAtRm9yY2UgLUVycm9yQWN0aW9uICdTaWxlbnRseUNvbnRpbnVlJw0KDQogICAgICAgICAgICAgICAgTmV3LUl0ZW0gLVBhdGggJFNoYXJlUGF0aCAtSXRlbVR5cGUgQ29udGFpbmVyIC1Gb3JjZQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIE5ldy1TbWJTaGFyZSAtUGF0aCAkU2hhcmVQYXRoIGANCiAgICAgICAgICAgICAgICAgICAgLU5hbWUgJFNoYXJlTmFtZSBgDQogICAgICAgICAgICAgICAgICAgIC1GdWxsQWNjZXNzICIkQ2x1c3RlckFjY291bnQiIGANCiAgICAgICAgICAgICAgICAgICAgLURlc2NyaXB0aW9uICJTaGFyZWQgZm9sZGVyIGZvciBGYWlsb3ZlciBDbHVzdGVyLiINCg0KICAgICAgICAgICAgfSAtQXJndW1lbnRMaXN0ICRTaGFyZVBhdGgsICRTaGFyZU5hbWUsICIkRG9tYWluTmFtZVwkQ2x1c3Rlck5hbWVgJCINCg0KICAgICAgICBXcml0ZS1Mb2cgIkNvbmZndXJpbmcgRmFpbG92ZXIgQ2x1c3RlciB0byB1c2Ugc2hhcmVkIGZvbGRlciBhcyBxb3VydW0gcmVzb3Vyc2UgLi4uIg0KDQogICAgICAgICRudWxsID0gU2V0LUNsdXN0ZXJRdW9ydW0gLU5vZGVBbmRGaWxlU2hhcmVNYWpvcml0eSAiXFwkU2hhcmVTZXJ2ZXJcJFNoYXJlTmFtZSINCg0KICAgICAgICBXcml0ZS1Mb2cgIjwtLSBOZXctRmFpbG92ZXJDbHVzdGVyU2hhcmVkRm9sZGVyIg0KICAgIH0NCn0NCg0KDQoNCmZ1bmN0aW9uIE5ldy1GYWlsb3ZlckNsdXN0ZXIgew0KCXBhcmFtICgNCiAgICAgICAgW1N0cmluZ10gJENsdXN0ZXJOYW1lLA0KICAgICAgICBbU3RyaW5nXSAkU3RhdGljQWRkcmVzcywNCiAgICAgICAgW1N0cmluZ1tdXSAkQ2x1c3Rlck5vZGVzLA0KICAgICAgICBbU3RyaW5nXSAkRG9tYWluTmFtZSwNCiAgICAgICAgW1N0cmluZ10gJFVzZXJOYW1lLA0KICAgICAgICBbU3RyaW5nXSAkVXNlclBhc3N3b3JkLA0KICAgICAgICAkQ3JlZGVudGlhbA0KICAgICkNCiAgICBiZWdpbiB7DQogICAgICAgIFNob3ctSW52b2NhdGlvbkluZm8gJE15SW52b2NhdGlvbg0KICAgIH0NCiAgICBlbmQgew0KICAgICAgICBTaG93LUludm9jYXRpb25JbmZvICRNeUludm9jYXRpb24gLUVuZA0KICAgIH0NCiAgICBwcm9jZXNzIHsNCiAgICAgICAgV3JpdGUtTG9nICJDbHVzdGVyTm9kZXM6ICQoJENsdXN0ZXJOb2RlcyAtam9pbiAnLCAnKSINCg0KICAgICAgICBpZiAoJENyZWRlbnRpYWwgLWVxICRudWxsKSB7DQogICAgICAgICAgICAkQ3JlZGVudGlhbCA9IE5ldy1DcmVkZW50aWFsIC1Vc2VyTmFtZSAiJERvbWFpbk5hbWVcJFVzZXJOYW1lIiAtUGFzc3dvcmQgIiRVc2VyUGFzc3dvcmQiDQogICAgICAgIH0NCg0KICAgICAgICBJbXBvcnQtTW9kdWxlIEZhaWxvdmVyQ2x1c3RlcnMNCg0KICAgIAlpZiAoKEdldC1DbHVzdGVyICRDbHVzdGVyTmFtZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkgLWVxICRudWxsKSB7DQogICAgICAgICAgICBXcml0ZS1Mb2cgIkNyZWF0aW5nIG5ldyBjbHVzdGVyICckQ2x1c3Rlck5hbWUnIC4uLiINCiAgICAgICAgICAgIFN0YXJ0LVBvd2VyU2hlbGxQcm9jZXNzIC1Db21tYW5kIEAiDQpJbXBvcnQtTW9kdWxlIEZhaWxvdmVyQ2x1c3RlcnMNCk5ldy1DbHVzdGVyIC1OYW1lICckQ2x1c3Rlck5hbWUnIC1TdGF0aWNBZGRyZXNzICckU3RhdGljQWRkcmVzcycNCiJAIC1DcmVkZW50aWFsICRDcmVkZW50aWFsIC1Ob0Jhc2U2NA0KICAgICAgICAgICAgU3RhcnQtU2xlZXAgLVNlY29uZHMgMTUNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIFdyaXRlLUxvZyAiQ2x1c3RlciAnJENsdXN0ZXJOYW1lJyBhbHJlYWR5IGV4aXN0cy4iDQogICAgICAgIH0NCg0KICAgICAgICBmb3JlYWNoICgkTm9kZSBpbiAkQ2x1c3Rlck5vZGVzKSB7DQogICAgICAgICAgICBXcml0ZS1Mb2cgIkFkZGluZyBub2RlICckTm9kZScgdG8gdGhlIGNsdXN0ZXIgJyRDbHVzdGVyTmFtZScgLi4uIg0KICAgICAgICAgICAgaWYgKChHZXQtQ2x1c3Rlck5vZGUgJE5vZGUgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpIC1lcSAkbnVsbCkgew0KICAgICAgICAgICAgICAgIFdyaXRlLUxvZyAiQWRkaW5nIG5vZGUgLi4uIg0KICAgICAgICAgICAgICAgIFN0YXJ0LVBvd2VyU2hlbGxQcm9jZXNzIC1Db21tYW5kIEAiDQpJbXBvcnQtTW9kdWxlIEZhaWxvdmVyQ2x1c3RlcnMNCkFkZC1DbHVzdGVyTm9kZSAtQ2x1c3RlciAnJENsdXN0ZXJOYW1lJyAtTmFtZSAnJE5vZGUnDQoiQCAtQ3JlZGVudGlhbCAkQ3JlZGVudGlhbCAtTm9CYXNlNjQNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgIFdyaXRlLUxvZyAiTm9kZSAnJE5vZGUnIGFscmVhZHkgYSBwYXJ0IG9mIHRoZSBjbHVzdGVyICckQ2x1c3Rlck5hbWUnLiINCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQoNCjwjDQoNCiMgRXhhbXBsZQ0KDQokRG9tYWluTmFtZSA9ICdmYy1hY21lLmxvY2FsJw0KJERvbWFpblVzZXIgPSAnQWRtaW5pc3RyYXRvcicNCiREb21haW5QYXNzd29yZCA9ICdQQHNzdzByZCcNCg0KJENsdXN0ZXJOYW1lID0gJ2ZjLXRlc3QnDQokQ2x1c3RlcklQID0gJzEwLjIwMC4wLjYwJw0KJENsdXN0ZXJOb2RlcyA9IEAoJ2ZjLW5vZGUtMDEnLCdmYy1ub2RlLTAyJywnZmMtbm9kZS0wMycpDQoNCiRTaGFyZVNlcnZlciA9ICdmYy1kYy0wMScNCiRTaGFyZU5hbWUgPSAnRkNTaGFyZScNCg0KJFNoYXJlUGF0aCA9ICJDOlwkU2hhcmVOYW1lIg0KDQoNCg0KSW1wb3J0LU1vZHVsZSBDb3JlRnVuY3Rpb25zIC1Gb3JjZQ0KDQokQ3JlZHMgPSBOZXctQ3JlZGVudGlhbCBgDQogICAgLVVzZXJOYW1lICIkRG9tYWluTmFtZVwkRG9tYWluVXNlciIgYA0KICAgIC1QYXNzd29yZCAiJERvbWFpblBhc3N3b3JkIg0KDQpOZXctRmFpbG92ZXJDbHVzdGVyIGANCiAgICAtQ2x1c3Rlck5hbWUgJENsdXN0ZXJOYW1lIGANCiAgICAtU3RhdGljQWRkcmVzcyAkQ2x1c3RlcklQIGANCiAgICAtQ2x1c3Rlck5vZGVzICRDbHVzdGVyTm9kZXMgYA0KICAgIC1DcmVkZW50aWFsICRDcmVkcw0KDQpOZXctRmFpbG92ZXJDbHVzdGVyU2hhcmVkRm9sZGVyIGANCiAgICAtQ2x1c3Rlck5hbWUgJENsdXN0ZXJOYW1lIGANCiAgICAtRG9tYWluTmFtZSAkRG9tYWluTmFtZSBgDQogICAgLVNoYXJlU2VydmVyICRTaGFyZVNlcnZlciBgDQogICAgLVNoYXJlUGF0aCAiJFNoYXJlUGF0aCIgYA0KICAgIC1TaGFyZU5hbWUgIiRTaGFyZU5hbWUiIGANCiAgICAtQ3JlZGVudGlhbCAkQ3JlZHMNCg0KIz4NCg=="
  ]
}